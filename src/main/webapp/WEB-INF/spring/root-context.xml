<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		 http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 트랜잭션 목적 -->
	<!-- xmlns:tx="http://www.springframework.org/schema/tx" -->
	<!-- http://www.springframework.org/schema/tx -->
	<!-- http://www.springframework.org/schema/tx/spring-tx.xsd -->
	<!-- Root Context: defines shared resources visible to all other web components -->


	<context:property-placeholder
		location="classpath:db.properties" />



	<!-- myBatis의 싱글톤 객체 생성 -->
	<bean id="my" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="config"></constructor-arg>
	</bean>

	<!-- myBatis의 설정 객체 생성 -->
	<bean id="config" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcp"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
	</bean>

	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 트랜잭션 매니저 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbcp" />
	</bean>



	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" timeout="600"
				rollback-for="Exception" />
			<tx:method name="update*" timeout="600"
				rollback-for="Exception" />
			<tx:method name="delete*" timeout="600"
				rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txPointcut"
			expression="execution(* com.study.*.*.service..impl.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="txPointcut" />
	</aop:config>
	<!-- 출처: https://granya.tistory.com/43 [그라냐's blog:티스토리] -->


	<context:component-scan base-package="com.study">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 출처: https://granya.tistory.com/43 [그라냐's blog:티스토리] -->
	<!-- 파일 업로드 설정 -->
	<!-- <bean id="multipartResolver" -->
	<!-- class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
	<!-- 파일 업로드 설정 -->
	<!-- <property name="maxUploadSize" value="10485760" /> 10MB, 필요에 따라 조절 -->
	<!-- </bean> -->

	<!-- username과 password의 value에는 사용할 자신의 네이버 또는 구글의 ID와 비밀번호 -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="cha1478916" />
		<property name="password" value="fvsj prbx seye admf" />
		<!-- 보안연결 SSL과 관련된 설정 -->
		<property name="javaMailProperties">
			<props>
				<!-- 구글 -->
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<!-- 네이버는 (SSL 필요) -->
				<!-- <prop key="mail.smtp.auth">true</prop> -->
				<!-- <prop key="mail.smtp.starttls.enable">true</prop> -->
				<!-- <prop key="mail.smtps.checkserveridentity">true</prop> -->
				<!-- <prop key="mail.smtps.ssl.trust">*</prop> -->
				<!-- <prop key="mail.debug">true</prop> -->
				<!-- <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> -->
			</props>
		</property>
	</bean>

</beans>
