<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration
	xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console"
		class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>

<!-- ConsoleAppender를 사용하여 로그 메시지를 콘솔에 출력합니다. -->
<!-- 	<appender name="console" -->
<!-- 		class="org.apache.log4j.ConsoleAppender"> -->
<!-- 		<layout class="org.apache.log4j.PatternLayout"> -->
<!-- 			<param name="ConversionPattern" -->
<!-- 				value="%d{HH:mm:ss.SSS} [%t] %-5p %c{1} - %m%n" /> -->
<!-- 		</layout> -->
<!-- 	</appender> -->
<!-- 	PatternLayout을 사용하여 로그 메시지의 포맷을 지정합니다. 여기서 %d, %t, %p, %c, %m 등은 각각 날짜와 시간, 스레드 이름, 로그 레벨, 로거 이름, 메시지를 나타냅니다. -->
<!-- <root> 섹션에서는 애플리케이션의 기본 로그 레벨을 설정하고, console 애펜더를 등록합니다. -->

<!-- 	<root> -->
<!-- 		<priority value="info" /> -->
<!-- 		<appender-ref ref="console" /> -->
<!-- 	</root> -->
	<!-- Application Loggers -->
	<logger name="com.study.assetmanager">
		<level value="info" />
	</logger>

	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>

	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>

	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>

</log4j:configuration>
